#!/usr/local/bin/clisp -ansi -q -E iso-8859-1 -on-error debug
;;;; -*- mode:lisp; coding:iso-8859-1 -*-
(defun main ()
  (let ((a (random 10))
        (b (random 10))
        (c (random 10))
        (w (make-array '(10 3) :initial-contents
                       #((integrated        management           options)
                         (total             organizational       flexibility)
                         (systematized      monitored            capability)
                         (parallel          reciprocal           mobility)
                         (functional        digital              programming)
                         (responsive        logistical           concept)
                         (optional          transitional         time-phase)
                         (synchronized      incremental          projection)
                         (compatible        third-generation     hardware)
                         (balanced          policy               contingency))))
        (*print-case* :downcase))
    (format t "~&~A ~A ~A~%" (aref w a 0) (aref w b 1) (aref w c 2))
    (finish-output)
    #+(and (not testing) clisp) (ext:quit)))

#-testing (main)
